{"version":3,"sources":["styles/NavBarStyles.js","contexts/ThemeContext.js","hooks/useToggleState.js","contexts/LanguageContext.js","Navbar.js","styles/FormStyles.js","Form.js","PageContent.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","unit","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","ThemeContext","createContext","ThemeProvider","props","initVal","useState","state","setState","toggle","useToggleState","isDarkMode","toggleTheme","Provider","value","children","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","e","target","content","english","flag","french","spanish","withStyles","useContext","classes","className","AppBar","Toolbar","IconButton","Typography","variant","Switch","onChange","InputBase","placeholder","input","main","paper","marginTop","flexDirection","padding","avatar","margin","secondary","form","submit","words","signIn","email","password","remember","Paper","Avatar","Select","onClick","MenuItem","FormControl","required","fullWidth","InputLabel","htmlFor","Input","id","name","autoFocus","FormControlLabel","control","Checkbox","label","Button","type","PageContent","style","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba22b3e9.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nexport default styles;","import React, {createContext } from 'react'\nimport useToggleState from \"../hooks/useToggleState\"\n\nexport const ThemeContext= createContext();\n\nexport function ThemeProvider(props) {\n\n    const [isDarkMode,toggleTheme]=useToggleState(true);\n        \n    return (\n        <ThemeContext.Provider value={{isDarkMode,toggleTheme}}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n\n};\n\n\n\n","import {useState} from 'react'\n\nexport default function useToggle(initVal=false) {\n\n    const [state,setState]=useState(initVal);\n    const toggle=()=>{\n        setState(!state);}\n\n    return [state,toggle];\n}\n","import React, { createContext,useState } from 'react'\n\nexport const LanguageContext=createContext();\n\n\nexport function LanguageProvider(props) {\n    \nconst [language, setLanguage]= useState(\"spanish\");\nconst changeLanguage=(e)=> setLanguage(e.target.value)\n\n    return (\n        <LanguageContext.Provider value={{language, changeLanguage}}>\n            { props.children }\n        </LanguageContext.Provider>\n    )\n}\n\n\n","import React, { useContext } from 'react'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\n\nconst content = {\n  english: {\n    search: \"Search\",\n    flag: \"ðŸ‡¬ðŸ‡§\"\n  },\n  french: {\n    search: \"Chercher\",\n    flag: \"ðŸ‡«ðŸ‡·\"\n  },\n  spanish: {\n    search: \"Buscar\",\n    flag: \"ðŸ‡ªðŸ‡¸\"\n  }\n};\n\nfunction Navbar(props) {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n  const { language } = useContext(LanguageContext);\n  const { classes } = props;\n  const { search, flag } = content[language];\n  return (\n    <div className={classes.root}>\n        <AppBar position='static' color={isDarkMode ? \"default\" : \"primary\"}>\n            <Toolbar>\n              <IconButton className={classes.menuButton} color='inherit'>\n                <span>{flag}</span>\n              </IconButton>\n              <Typography className={classes.title} variant='h6' color='inherit'>\n                App Title \n              </Typography>\n              <Switch onChange={toggleTheme} />\n              <div className={classes.grow} />\n              <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                  placeholder={`${search}...`}\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput\n                  }}\n              />\n              </div>\n            </Toolbar>\n        </AppBar>\n    </div>\n  );\n}\nexport default withStyles(styles)(Navbar);\n\n","const styles = theme => ({\n    main: {\n      width: \"auto\",\n      display: \"block\",\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: 400,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      }\n    },\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n        .spacing.unit * 3}px`\n    },\n    avatar: {\n      margin: theme.spacing.unit,\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3\n    }\n  });\n  export default styles;","import React, { useContext } from 'react'\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\n\nconst words = {\n    english: {\n      signIn: \"Sign In\",\n      email: \"Email Address\",\n      password: \"Password\",\n      remember: \"Remember Me\"\n    },\n    french: {\n      signIn: \"Se Connecter\",\n      email: \"Adresse Ã‰lectronique\",\n      password: \"Mot de Passe\",\n      remember: \"Souviens-toi De Moi\"\n    },\n    spanish: {\n      signIn: \"Registrarse\",\n      email: \"Correo ElectrÃ³nico\",\n      password: \"ContraseÃ±a\",\n      remember: \"RecuÃ©rdame\"\n    }\n}\n\nfunction Form(props) {\n    const {language, changeLanguage}=useContext(LanguageContext);\n    const { classes }=props;\n    const { email, signIn, password, remember } = words[language];\n\n    return (\n        <main className={classes.main}>\n            <Paper className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography variant='h5'>{signIn}</Typography>\n            <Select value={language} onClick={changeLanguage}>\n                <MenuItem value='english'>English</MenuItem>\n                <MenuItem value='french'>French</MenuItem>\n                <MenuItem value='spanish'>Spanish</MenuItem>\n            </Select>\n            <form className={classes.form}>\n                <FormControl margin='normal' required fullWidth>\n                <InputLabel htmlFor='email'>{email}</InputLabel>\n                <Input id='email' name='email' autoFocus />\n                </FormControl>\n                <FormControl margin='normal' required fullWidth>\n                <InputLabel htmlFor='password'>{password}</InputLabel>\n                <Input id='password' name='password' autoFocus />\n                </FormControl>\n                <FormControlLabel\n                control={<Checkbox color='primary' />}\n                label={remember}\n                />\n                <Button\n                variant='contained'\n                type='submit'\n                fullWidth\n                color='primary'\n                className={classes.submit}\n                >\n                {signIn}\n                </Button>\n            </form>\n            </Paper>\n      </main>\n    );\n}\n\nexport default withStyles(styles)(Form);\n","import React,{useContext} from 'react'\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nfunction PageContent(props) {\n    const {isDarkMode}=useContext(ThemeContext);\n\n    const styles={\n        backgroundColor:isDarkMode ? \"black\" : \"azure\",\n        height: \"100vh\",\n        width: \"100vw\"\n    }\n\n    return (\n        <div style={styles}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport default PageContent\n","import React from 'react';\nimport Navbar from \"./Navbar\"\nimport Form from \"./Form\"\nimport PageContent from \"./PageContent\"\nimport { LanguageProvider} from \"./contexts/LanguageContext\";\nimport { ThemeProvider} from \"./contexts/ThemeContext\";\n\nfunction App() {\n  return (\n    <>\n    <LanguageProvider>\n    <ThemeProvider>\n    <PageContent>\n    <Navbar />\n    <Form />\n    </PageContent>\n    </ThemeProvider>\n    </LanguageProvider>\n    </>\n\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}